<resources>
    <string name="app_name">Простой строковый калькулятор</string>
    <string name="title_info_activity">Информация</string>

    <string name="enter_expression_hint">Введите выражение</string>
    <string name="calculate">Рассчитать</string>

    <string name="zero_lenght_string">Строка пуста, введите выражение.</string>
    <string name="illegal_symbol_error">В строке содержатся недопустимые символы.</string>
    <string name="bad_operand">Некорректные операнды в строке.</string>
    <string name="bad_bracket">Несогласованные скобки в выражении.</string>
    <string name="bad_operator">Неверно расставлены операторы в выражении.</string>
    <string name="bad_ternar">Ошибка в записи тернарного оператора.</string>
    <string name="bad_general">Логическая ошибка в записи выражения.</string>

    <string name="icon8_text">В этом проекте использованы материалы полученные с ресурса ICON8 ( https://icons8.ru ) </string>
    <string name="readmeMD">
<big>Тестовое задание Java:\n
    Simple string calculator\n</big>
\n
Общие сведения:\n
--------------------------------------------\n
    Автор: Oleg Ustsov\n
    Дата выполнения: 2020-03-02\n
    Мин. поддерживаемая версия - 5.0 (minSDK=21)\n
    Выполнено в Android Studio 3.5, язык Java\n
\n
Задание:\n
--------------------------------------------\n
    Реализовать строковый калькулятор на языке Java/kotlin: пользователь вводит строку с\n
    арифметическим выражением в инфиксной нотации, калькулятор вычисляет его значение.\n
\n
    Требования:\n
        • Функционал:\n
            ○ Бинарные функции: +, -, ×, ÷;\n
            ○ Унарные функции: - (минус);\n
            ○ Произвольная вложенность скобок;\n
        • Приложение должно быть написано для платформы Android;\n
        • Корректная обработка ошибочного ввода;\n
        • Использование Git. Проект должен быть выложен на одном из сервисов (GitHub,\n
          Bitbucket, GitLab);\n
        • Использование сторонних библиотек запрещено\n
\n
    Большими плюсами будут:\n
        • Использование принципов ООП и SOLID;\n
        • Поддержка ввода дробных чисел;\n
        • Реализация тернарного оператора (например: 10 > 5 ? 1 : 2).\n
\n
Общий алгоритм реализации:\n
--------------------------------------------\n
1. Разбор строки:\n
- проверка на недопустимые символы\n
- проверка операндов (наличие дробной части после разделителя, единственный разделитель на целую и дробную часть)\n
- проверка расстановки скобок - согласованность открытых и закрытых скобок\n
- проверка расстановки операторов - простая синтаксическая проверка\n
- преобразование строки в массив строк из операторов и операндов\n
2. Преобразование в ОПЗ (обратную польскую запись) - алгоритм сортировочной станции\n
3. Вычисление - стековая машина\n

    </string>

</resources>
